------------
| INFOS.TXT |
-------------

-------------
Config file :
-------------
- "*.cub" --> is ".cub" accepted or not ?
* meaning in bash is any character or none
however ".blabla" is not a file with extension blabla, but an hidden file
When I create a file name ".cub" and then try "rm *.cub" --> no such file
But if I create a file "cub" and then try "rm *cub" -> it deletes the right file
it works with any command. bash and zsh.
From this tests I conclude that ".cub" is not acceptable.
- Space in the texture path
such as map\ .cub or "map .cub" is ok in bash. 
I dont handle theses.
- Quotes in the texture path --> '"config.cub"' should be accepted as config.cub
and not "config.cub". I accept one peer of quote (double or simple).
- Spaces in rgb --> "F  200    ,  23,255   " might be acceptable, but not for
texture_path because its a single peace of info
- Spaces that be part the texture path : i dont handle bc of ft_split(' ').

-----
MAP :
-----
	- I decided to :
		- make all lines the same lenght (the longest)
		- turn extra char of enlarged lines to spaces
		- transform spaces into char '2'
	--> All maps are rectangle and no problem of wall for shorter line
	- Exactly one player pos (one of : N,S,E,W)
	- No empty lines are accepted within the map (or after)
-------> Eric's idea : resize la map at longest line with spaces. Do not replace
space by 1, just check that space are surrounded (from all sides) by space or 
wall, never 0 or player pos
and finally check that the ractangle map is surrounded by walls


------------
MLX BASICS : 
------------
	- input convention : /usr/include/X11/keysymdef.h
	- events : /usr/include/X11/X.h
	- Endian : for portability will be checking it with : 
			int n=1; *(char *)&n = 1 ? little (most sign left) : big (most sign right) 

-------
BONUS :
-------
		- minimap
		- [c] for crouching (s'accroupir) + flying and laying ? 
		- zoom in/out

---------
MAXIMAP :
---------
		- sizing : 
			- 1920 = 29 * 64 + 64
			- 1056 = 15 * 64 + 64
			-> de base en 64 on peut afficher du 29 par 15 avec une bordure
			- on pourrait travailler en 2^ : 64 - 32 - 16 - 8 - 4
			mais on aurait des gros delta pour pas grand chose genre un 30 * 15 serait
			en 32 avec du coup une enorme bordure. on va plutot faire un calcul precis 
			- on garde une taille en CARRE pour eviter d'avoir des formes chelou sur les maps
			genre line shape : on aura donc possiblement une grosse bordure en x ou en y 
			- il faudra calculer une taille de bordure en x et une autre en y
	- soit y le nb de ligne
	- soit x la largeur de ligne
	- soit WIN_H la hauteur max : 1056
	- soit WIN_W la largeur max : 1920
	- soit TILE la taille d'un rect avec TILE = x_rect = y_rect
	- on cherche TILE connaissant W et H x et y
	- en laissant au moins un TILE en x et un en y pour la bordure (un demi tile de chaque cote)
	- TILE sera la plus petit trouve entre x et y 
- en x : TILEx = WIN_W / (x+1)
- en y : TILEy = WIN_H / (y+1)
- res = min(TILEx, TILEy)
	- on cherche ensuite la taille de la bordure en x et en y
- bordurex = WIN_W - (TILEx * x)
- bordurey = WIN_H - (TILEy * y)
	- en decoule pos de depart pour mlx put image to win
- xpos = bordurex / 2
- ypos = bordurey / 2
				- il faudrqait sensuite adapter la taille de joueur sur la mmap :
				pour l'instant c un carre de 8 pixel

---------------
GAME COMMANDS : 
---------------
	Displayed in Makefile via rule make all (even is up to date)